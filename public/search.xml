<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MSGP</title>
      <link href="/2019/12/09/golang/msgp/"/>
      <url>/2019/12/09/golang/msgp/</url>
      
        <content type="html"><![CDATA[<p>“MessagePack is an efficient binary serialization format. It lets you exchange data among multiple languages like JSON. But it’s faster and smaller. Small integers are encoded into a single byte, and typical short strings require only one extra byte in addition to the strings themselves.”</p><p><img src="/images/msgp-speed.png" alt="Speed Test"></p><p>For more detail specification, you can view <a href="https://gist.github.com/frsyuki/543255" target="_blank" rel="noopener">MSGP update proposal V5</a>.</p><h2 id="Why-Smaller"><a href="#Why-Smaller" class="headerlink" title="Why Smaller"></a>Why Smaller</h2><p>cause JSON is a <strong>text based protocal</strong>, it’s easy to read by human while extra format characters are necessary. There’s a example.</p><p>If we define a struct <strong>User</strong> in golang,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">type User struct &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Name      string &#96;json:&quot;name&quot;&#96;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Gender    string &#96;json:&quot;gender&quot;&#96;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Age       int    &#96;json:&quot;age&quot;&#96;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Bio       string &#96;json:&quot;bio&quot;&#96;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>the JSON marshal result will be</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &quot;name&quot;:&quot;DL&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    &quot;gender&quot;:&quot;male&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &quot;age&quot;:1024,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &quot;bio&quot;:&quot;let&#39;s dance!&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>there’re <strong>23</strong> bytes for brace, comma and colon. While, MSGP uses a Type System to reduce these extra overhead, for example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">fixmap stores a map whose length is upto 15 elements</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">+--------+~~~~~~~~~~~~~~~~~+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">|1000XXXX|   N*2 objects   |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">+--------+~~~~~~~~~~~~~~~~~+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">where</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">* XXXX is a 4-bit unsigned integer which represents N</span></pre></td></tr></table></figure><p>What’s more, there’s a compression algorithm of MSGP, which means less bytes will be used. For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">false:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">+--------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">|  0xc2  |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">+--------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">true:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">+--------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">|  0xc3  |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">+--------+</span></pre></td></tr></table></figure><h2 id="Why-Faster"><a href="#Why-Faster" class="headerlink" title="Why Faster"></a>Why Faster</h2><p>We usually use cJSON library to marshal/unmarshal JSON. cJSON uses <strong>linked list</strong> to store a <strong>tree</strong>. We need to scan each char to locate it’s node one by one. With useing MSGP, we do not need to match char cause there’s a <strong>type</strong> and <strong>length</strong> of each kind of MSGP data type.</p>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>How to Send Non-Spam E-mail</title>
      <link href="/2019/11/29/email/how-to-send-non-spam-email/"/>
      <url>/2019/11/29/email/how-to-send-non-spam-email/</url>
      
        <content type="html"><![CDATA[<h2 id="Why-is-E-mail-still-alive"><a href="#Why-is-E-mail-still-alive" class="headerlink" title="Why is E-mail still alive"></a>Why is E-mail still alive</h2><p>E-mail has already existed for nearly 50 years <a href="https://blog.cloudflare.com/the-history-of-email/" target="_blank" rel="noopener">1971</a>. Though IM and OA have developed a lot recently years, it seems that we still can not eliminate E-mail from our lives. The reasons may be:</p><ul><li>E-mail is widespread around the world. No matter Facebook, Google, Wechat or any others couldn’t claim that they have already connected everyone. But excatly everyone has E-mail address.</li><li>E-mail has already been the foundation of the Internet account system. Though <a href="https://rony13.github.io/2019/11/28/oauth2/">OAuth</a> has already been the most convenient way to sign up/in, you’ll find it out that E-mail is usually the origianl way of OAuth trace.</li><li>It can be used not only for communication but also as a storage tool.</li><li>The agreement reached by mail have legal effectiveness cause E-mail is irreversible and read-only. Recall your offers.</li></ul>]]></content>
      
      
      <categories>
          
          <category> email </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OAuth2.0</title>
      <link href="/2019/11/28/sso/oauth2/"/>
      <url>/2019/11/28/sso/oauth2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> sso </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Simple Mail Transfer Protocol (SMTP)</title>
      <link href="/2019/11/28/email/smtp/"/>
      <url>/2019/11/28/email/smtp/</url>
      
        <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>SMTP is a <strong>connection-oriented</strong>, <strong>text-based protocol</strong> in which a mail sender communicates with a mail receiver by issuing command strings and supplying necessary data over a reliable ordered data stream channel, typically a TCP connection.</p><p>SMTP defines <strong>message transport</strong>, not the message content. Thus, it defines the mail envelope and its parameters, such as the envelope sender, but not the header (except trace information) nor the body of the message itself.</p><p>SMTP is a <strong>Application Layer Protocal</strong>. E-mail is submitted by a <strong>MUA</strong>(mail user agent) to a <strong>MSA</strong>(mail submission agent) using <strong>SMTP</strong> on <strong>TCP</strong>. The MSA delivers the mail to its <strong>MTA</strong>(MTA). Often, these two agents are instances of the same software launched with different options on the same machine. Local processing can be done either on a single machine, or split among multiple machines; mail agent processes on one machine can share files, but if processing is on multiple machines, they transfer messages between each other using SMTP, where each machine is configured to use the next machine as a smart host. Each process is an <strong>MTA</strong>(an SMTP server) in its own right.</p><p>The boundary MTA uses the <strong>DNS</strong>(Domain name system) to look up the <strong>MX Record</strong>(mail exchanger record) for the recipient’s domain (the part of the email address on the right of @). The MX record contains the name of the target host. Based on the target host and other factors, the MTA selects an exchange server: see the article MX record. The MTA connects to the exchange server as an SMTP client.</p><p>Message transfer can occur in a single connection between two MTAs, or in a series of hops through intermediary systems. A receiving SMTP server may be the ultimate destination, an intermediate “relay” (that is, it stores and forwards the message) or a “gateway” (that is, it may forward the message using some protocol other than SMTP). Each hop is a formal handoff of responsibility for the message, whereby the receiving server must either deliver the message or properly report the failure to do so.</p><p>Once the final hop accepts the incoming message, it hands it to a <strong>MDA</strong>(mail delivery agent) for local delivery. An MDA saves messages in the relevant mailbox format. As with sending, this reception can be done using one or multiple computers, but in the diagram above the MDA is depicted as one box near the mail exchanger box. An MDA may deliver messages directly to storage, or forward them over a network using SMTP or other protocol such as <strong>LMTP</strong>(Local Mail Transfer Protocol), a derivative of SMTP designed for this purpose.</p><p>Once delivered to the local mail server, the mail is stored for batch retrieval by authenticated mail clients (MUAs). Mail is retrieved by end-user applications, called email clients, using <strong>IMAP</strong>(Internet Message Access Protocol), a protocol that both facilitates access to mail and manages stored mail, or the <strong>POP3</strong>(Post Office Protocol Version 3) which typically uses the traditional mbox mail file format or a proprietary system such as Microsoft Exchange/Outlook or Lotus Notes/Domino. Webmail clients may use either method, but the retrieval protocol is often not a formal standard.</p><p><img src="/images/smtp-overview.png" alt="overview"></p><h2 id="MX-Record"><a href="#MX-Record" class="headerlink" title="MX Record"></a>MX Record</h2><p>A MX record(mail exchanger record) specifies the mail server responsible for accepting email messages on behalf of a domain name. It is a resource record in the DNS(Domain Name System). It is possible to configure several MX records, typically pointing to an array of mail servers for load balancing and redundancy.</p><p>You can search for the MX records for a specific domain with <strong>nslookup</strong> on mac:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># nslookup</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&gt; set q&#x3D;mx</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&gt; gmail.com</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Server:10.86.96.1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Address:10.86.96.1#53</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Non-authoritative answer:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">gmail.commail exchanger &#x3D; 40 alt4.gmail-smtp-in.l.google.com.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">gmail.commail exchanger &#x3D; 5 gmail-smtp-in.l.google.com.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">gmail.commail exchanger &#x3D; 10 alt1.gmail-smtp-in.l.google.com.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">gmail.commail exchanger &#x3D; 20 alt2.gmail-smtp-in.l.google.com.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">gmail.commail exchanger &#x3D; 30 alt3.gmail-smtp-in.l.google.com.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">Authoritative answers can be found from:</span></pre></td></tr></table></figure><h2 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h2><p>Authencication, Authorization and Audit is a big topic, we’ll discuss later.</p><h2 id="Port"><a href="#Port" class="headerlink" title="Port"></a>Port</h2><p>There’re three ports for SMTP</p><ol><li><p>Port 25<br>the oldest port. It’s suggested to be used between MTAs in order to against spam E-mail.</p></li><li><p>Port 587<br>You need authentication when use port 587, that’s why it’s recomanded to use between MUA and MSA.</p></li><li><p>Port 465<br>Deprecated.</p></li></ol><p><img src="/images/smtp-port.png" alt="port"></p><h2 id="Transport-Example"><a href="#Transport-Example" class="headerlink" title="Transport Example"></a>Transport Example</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">~ telnet smtp.163.com 25</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Trying 220.181.12.12...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Connected to smtp.163.com.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Escape character is &#39;^]&#39;.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">220 163.com Anti-spam GT for Coremail System (163com[20141201])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">EHLO SMTP</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">250-mail</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">250-PIPELINING</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">250-AUTH LOGIN PLAIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">250-AUTH&#x3D;LOGIN PLAIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">250-coremail 1Uxr2xKj7kG0xkI17xGrU7I0s8FY2U3Uj8Cz28x1UUUUU7Ic2I0Y2UFJbpo8UCa0xDrUUUUj</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">250-STARTTLS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">250 8BITMIME</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">AUTH LOGIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">334 dXNlcm5hbWU6</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">dG9ueUAxNjMuY29t</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">334 UGFzc3dvcmQ6</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">dGVzdA&#x3D;&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">535 Error: authentication failed</span></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> email </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
